{"version":3,"sources":["../src/credentialstore/win32/win-credstore-parser.js"],"names":[],"mappings":"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","file":"win-credstore-parser.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\n//\r\n// Parser for the output of the creds.exe helper program.\r\n//\r\n\r\nvar _ = require('underscore');\r\nvar es = require('event-stream');\r\nvar stream = require('readable-stream');\r\nvar util = require('util');\r\n\r\nvar Transform = stream.Transform;\r\n\r\n//\r\n// Regular expression to match the various fields in the input.\r\n//\r\n\r\nvar fieldRe = /^([^:]+):\\s(.*)$/;\r\n\r\n//\r\n// Convert space separated pascal caps (\"Target Type\")\r\n// to camel case no spaces (\"targetType\"). Used to Convert\r\n// field names to property names.\r\n//\r\nfunction fieldNameToPropertyName(fieldName) {\r\n  var parts = fieldName.split(' ');\r\n  parts[0] = parts[0].toLowerCase();\r\n  return parts.join('');\r\n}\r\n\r\n//\r\n// Simple streaming parser. It's in one of two states:\r\n// 0 - Waiting for an entry\r\n// 1 - in an entry\r\n//\r\n// At the ending blank line (each entry has one) we output\r\n// the accumulated object.\r\n//\r\n\r\nfunction WinCredStoreParsingStream() {\r\n  Transform.call(this, {\r\n    objectMode: true\r\n  });\r\n\r\n  this.currentEntry = null;\r\n}\r\n\r\nutil.inherits(WinCredStoreParsingStream, Transform);\r\n\r\n_.extend(WinCredStoreParsingStream.prototype, {\r\n  _transform: function (chunk, encoding, callback) {\r\n    var match;\r\n    var line = chunk.toString();\r\n    var count = 0;\r\n\r\n    while (line !== null) {\r\n      ++count;\r\n      if (count > 2) {\r\n        return callback(new Error(util.format('Multiple passes attempting to parse line [%s]. Possible bug in parser and infinite loop', line)));\r\n      }\r\n\r\n      if (this.currentEntry === null) {\r\n        if (line !== '') {\r\n          this.currentEntry = {};\r\n          // Loop back around to process this line.\r\n          continue;\r\n        }\r\n        // Skip blank lines between items.\r\n        line = null;\r\n      }\r\n\r\n      if (this.currentEntry) {\r\n        if (line !== '') {\r\n          match = fieldRe.exec(line);\r\n          var key = fieldNameToPropertyName(match[1]);\r\n          var value = match[2];\r\n          this.currentEntry[key] = value;\r\n          line = null;\r\n        } else {\r\n          // Blank line ends an entry\r\n          this.push(this.currentEntry);\r\n          this.currentEntry = null;\r\n          line = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    callback();\r\n  },\r\n\r\n  _flush: function (callback) {\r\n    if (this.currentEntry) {\r\n      this.push(this.currentEntry);\r\n      this.currentEntry = null;\r\n    }\r\n    callback();\r\n  }\r\n});\r\n\r\nfunction createParsingStream() {\r\n  return es.pipeline(es.split(), new WinCredStoreParsingStream());\r\n}\r\n\r\ncreateParsingStream.ParsingStream = WinCredStoreParsingStream;\r\n\r\nmodule.exports = createParsingStream;\r\n"],"sourceRoot":"C:\\Users\\jorit\\Desktop\\vsts-vscode\\out"}